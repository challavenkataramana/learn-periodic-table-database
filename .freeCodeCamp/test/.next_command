__vsc_prompt_cmd_original
psql --username=freecodecamp --dbname=periodic_table
psql --username=freecodecamp --dbname=periodic_table
mkdir periodic_table
cd periodic_table
git init
echo "# Periodic Table Project" > README.md
git add README.md
git commit -m "Initial commit"
touch element.sh
touch element.sh
nano element.sh
git add element.sh
git commit -m "feat: Add element.sh script"
pg_dump -cC --inserts -U freecodecamp periodic_table > periodic_table.sql
git add periodic_table.sql
git commit -m "fix: update database schema and constraints"
git add README.md
git commit -m "chore: update README with project details"
git commit -m "test: verify database changes"
git commit -m "refactor: optimize database queries in script"
./element.sh
chmod +x element.sh
./element.sh
./element.sh 1
./element.sh H
./element.sh 'H'
./element.sh H
./element.sh Hydrogen
./element.sh unknown
git init
git branch -M main
git add .
git commit -m "Initial commit"
git commit -m "fix: renamed columns for consistency"
git commit -m "feat: added types table and linked it to properties"
git commit -m "fix: removed trailing zeros from atomic mass"
git commit -m "feat: added elements 9 and 10 to the database"
git commit -m "feat: added elements 9 and 10 to the database"git commit -m "refactor: improve script for querying elements"
git commit -m "refactor: improve script for querying elements"
git commit -m "[200~chore: rename repository branch to main"
git commit -m "chore: rename repository branch to main"
git add .
git commit -m "Initial commit"
git add periodic_table.sql
git commit -m "fix: update database schema and constraints"
git add periodic_table.sql
git commit -m "feat: add elements Fluorine and Neon to the database"
git add element.sh
git commit -m "feat: add element query script"
git add periodic_table.sql
git commit -m "feat: add element query script"
git add periodic_table.sql
git commit -m "feat: add element query script"
git add periodic_table.sql
git commit -m "feat: add element query script"
git add periodic_table.sql
git commit -m "feat: add element query script"
git add element.sh
git log --oneline
git add element.sh
git log --oneline
git rebase -i HEAD~4
git rebase -i HEAD~4
git rebase -i HEAD~4
git rebase -i HEAD~4
git rebase -i HEAD~4
git rebase -i HEAD~4
git rebase -i HEAD~4
git rebase -i HEAD~4
git rebase -i HEAD~4
git log --oneline
git rebase -i --root
git rebase -i --root
git rebase -i --root
git log --oneline
git rebase -i --root
git rebase -i --root
git log --oneline
git rebase -i --root
git log --oneline
git rebase -i --root
git log --oneline
git rebase -i --root
git log --oneline
git rebase -i --root
git rebase -i --root
builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
__vsc_regex_environment="^CYGWIN*|MINGW*|MSYS*"
[[ "$(uname -s)" =~ $__vsc_regex_environment ]]
__vsc_is_windows=0
__vsc_regex_histcontrol=".*(erasedups|ignoreboth|ignoredups).*"
[[ "$HISTCONTROL" =~ $__vsc_regex_histcontrol ]]
__vsc_history_verify=1
builtin unset __vsc_regex_environment
builtin unset __vsc_regex_histcontrol
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
__vsc_stable="$VSCODE_STABLE"
unset VSCODE_STABLE
[ "$__vsc_stable" = "0" ]
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
export GIT_EDITOR=/usr/bin/nano
[ -d "$HOME/bin" ]
[ -d "$HOME/.local/bin" ]
PATH="$HOME/.local/bin:$PATH"
[ -e /home/gitpod/.nix-profile/etc/profile.d/nix.sh ]
. /home/gitpod/.nix-profile/etc/profile.d/nix.sh
[[ -s "$HOME/.rvm/scripts/rvm" ]]
source "$HOME/.rvm/scripts/rvm"
[[ -n $SSH_CONNECTION ]]
'/ide/node' -p '"d902e428c251" + JSON.stringify(process.env) + "d902e428c251"'
export GIT_EDITOR=/usr/bin/nano
builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
__vsc_regex_environment="^CYGWIN*|MINGW*|MSYS*"
[[ "$(uname -s)" =~ $__vsc_regex_environment ]]
__vsc_is_windows=0
__vsc_regex_histcontrol=".*(erasedups|ignoreboth|ignoredups).*"
[[ "$HISTCONTROL" =~ $__vsc_regex_histcontrol ]]
__vsc_history_verify=1
builtin unset __vsc_regex_environment
builtin unset __vsc_regex_histcontrol
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
__vsc_stable="$VSCODE_STABLE"
unset VSCODE_STABLE
[ "$__vsc_stable" = "0" ]
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
